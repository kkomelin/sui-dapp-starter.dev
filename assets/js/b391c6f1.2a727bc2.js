"use strict";(self.webpackChunksui_dapp_starter_dev=self.webpackChunksui_dapp_starter_dev||[]).push([[328],{761:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>d,toc:()=>l});var o=t(6070),s=t(5710);const r={sidebar_position:4},i="useSynchronizedNetworkType()",d={id:"frontend/hooks/useSynchronizedNetworkType",title:"useSynchronizedNetworkType()",description:"The useSynchronizedNetworkType() hook lets you determine which network is currently active in the user wallet.",source:"@site/docs/frontend/hooks/useSynchronizedNetworkType.md",sourceDirName:"frontend/hooks",slug:"/frontend/hooks/useSynchronizedNetworkType",permalink:"/docs/frontend/hooks/useSynchronizedNetworkType",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"useFaucet()",permalink:"/docs/frontend/hooks/useFaucet"},next:{title:"Deployment",permalink:"/docs/category/deployment"}},c={},l=[{value:"Usage",id:"usage",level:2},{value:"One-time request",id:"one-time-request",level:3},{value:"On demand",id:"on-demand",level:3},{value:"Regular update",id:"regular-update",level:3},{value:"Used in",id:"used-in",level:2}];function a(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"usesynchronizednetworktype",children:"useSynchronizedNetworkType()"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"useSynchronizedNetworkType()"})," hook lets you determine which network is currently active in the user wallet."]}),"\n",(0,o.jsx)(n.p,{children:"It's possible to request the network type once or on a regular basis."}),"\n",(0,o.jsxs)(n.p,{children:["If a wallet is not connected, the network type will be ",(0,o.jsx)(n.code,{children:"undefined"}),"."]}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsx)(n.p,{children:"The user wallet is the single point of truth and the only way to switch the network now is through wallet settings."})}),"\n",(0,o.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,o.jsx)(n.h3,{id:"one-time-request",children:"One-time request"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",metastring:'title="MyComponent.tsx"',children:"const { networkType } = useSynchronizedNetworkType()\n// or\nconst { networkType } = useSynchronizedNetworkType({ \n  autoSync: false \n})\n"})}),"\n",(0,o.jsx)(n.h3,{id:"on-demand",children:"On demand"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",metastring:'title="MyComponent.tsx"',children:"const { networkType, synchronize } = useSynchronizedNetworkType()\nsynchronize()\n"})}),"\n",(0,o.jsx)(n.h3,{id:"regular-update",children:"Regular update"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",metastring:'title="MyComponent.tsx"',children:"const { networkType } = useSynchronizedNetworkType({ \n  autoSync: true, \n  autoSyncInterval: 3000 \n})\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Where ",(0,o.jsx)(n.code,{children:"autoSyncInterval"})," is in milliseconds. Default value is 3000 milliseconds (3 seconds)."]}),"\n",(0,o.jsx)(n.h2,{id:"used-in",children:"Used in"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"/docs/frontend/components/NetworkType",children:"<NetworkType />"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},5710:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>d});var o=t(758);const s={},r=o.createContext(s);function i(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);